需求
1. 多拨（单线多拨，两个帐号）
2. Samba 
3. 去广告
4. 科学上网
//---------------------------
//操作过程严格进行，否则会有各种状况。

一、安装依赖（终端中输入）：
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler curl


二、下载源码 
git clone https://github.com/coolsnowwolf/lede.git

三、如果后期要更新本地git源码 
git pull

四、更新源码中引用源
cd lede  #进入到下载的文件夹中
./scripts/feeds update -a
./scripts/feeds install -a
或./scripts/feeds update -a && ./scripts/feeds install -a
下载所有脚本和程序
make download -j5

五、测试编译环境
make defconfig
   根据屏幕信息补全安装所需依赖
1.Target System--→Broadcom     BCM47xx/53xx (ARM)
2.Target Profile--→PHICOMM     K3
3.Target Images--→默认选中squashfs
4.支持 iPv6：
     Extra packages —> ipv6helper （选定这个后下面几项自动选择了）
     Network —> odhcp6c
     Network —> odhcpd-ipv6only
     LuCI —> Protocols —> luci-proto-ipv6
     LuCI —> Protocols —> luci-proto-ppp
先在Luci-application和theme里选择要安装的插件，会自动选择依赖。
   
六、进入编译配置界面
make menuconfig
七、编译
1.  sed -i 's|^TARGET_|# TARGET_|g; s|# TARGET_DEVICES += phicomm-k3|TARGET_DEVICES += phicomm-k3|' target/linux/bcm53xx/image/Makefile
只编译k3固件，没有这个指令编译了一个上午，得到很多固件。
 
2. make -j1 V=s或make V=s（单线程，非常慢）
注意：-j1 后面是线程数。
第一次编译推荐用单线程，国内请尽量全局兲朝上网。-j8还是j4根据你cpu内核定，我是9900k，直接8核编译，需时大概15-20min左右，即可编译好。
####################################################
到此，可以得到固件在目录bin/target/...  
若要两次编译，参看文章最后

八、修改编译设置：

1.修改主机名，设定时区，IP地址
打开/package/base-files/files/bin/config_generate文件，修改如下
generate_static_system() {
uci -q batch <<-EOF
delete system.@system[0]
add system system
set system.@system[-1].hostname='LEDE'#修改主机名
set system.@system[-1].timezone='Asia/Shanghai'#修改默认时区
lan) ipad=${ipaddr:-"192.168.1.1"} ;;#修改默认IP

2.修改WIFI信息
打开/package/kernel/mac80211/files/lib/wifi/mac80211.sh文件，修改如下
set wireless.radio${devidx}.disabled=0#改为0自动打开wifi
set wireless.default_radio${devidx}=wifi-iface
set wireless.default_radio${devidx}.device=radio${devidx}
set wireless.default_radio${devidx}.network=lan
set wireless.default_radio${devidx}.mode=ap
set wireless.default_radio${devidx}.ssid=LEDE#wifi名称
set wireless.default_radio${devidx}.encryption=psk2#wifi加密方式，没有是none
set wireless.default_radio${devidx}.key=password#wifi密码

3.SSH/TELNET显示信息修改方式：
打开/package/base-files/files/etc/banner文件，修改。
         
4.修改默认主题
打开/feeds/luci/collections/luci/Makefile文件，修改如下（实测似乎无效）
LUCI_DEPENDS:= \
        +uhttpd +uhttpd-mod-ubus +luci-mod-admin-full +luci-theme-argon \
       +luci-app-firewall +luci-proto-ppp +libiwinfo-lua \     +rpcd-mod-rrdns

5.修改路由连接数（Lean版默认已经是最大65535）
打开/package/base-files/files/etc/sysctl.conf文件，修改如下
net.netfilter.nf_conntrack_max=65535#连接数

      TIPS:修改源码后重新编译需要删除build_dir目录跟staging_dir目录还有tmp目录。
  
  
  另外：
  第二次编译时：
cd lede                                                           进入LEDE目录
gitpull                                                           同步更新源码
./scripts/feedsupdate -a && ./scripts/feeds install -a               更新FEEDS
rm -rf ./tmp && rm -rf.config                                清除编译配置和缓存
make menuconfig                                                进入编译配置菜单，根据需要修改
make -jn V=s                          n=线程数+1，例如4线程的I5填-j5，开始编译
